/* 
/* container flex properties */
.container {

    display: flex / inline-flex;
    /* display enables a flex container and sets it to block or inline */
    align-content: flex-start | flex-end | center | space-between | space-around | space-evenly | stretch | start | end | baseline | first baseline | last baseline + ... safe | unsafe;
    /* align-content only takes effect on multi-line flexible containers, where flex-wrap is set to
    either wrap or wrap-reverse)*/
    justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly | start | end | left | right ... + safe | unsafe;
    /* justify-content helps distribute extra free space leftover and defines the alignment along the main axis*/
    align-items: stretch | flex-start | flex-end | center | baseline | first baseline | last baseline | start | end | self-start | self-end + ... safe | unsafe;
    /* align-items is the justify-content version for the cross-axis  */
    flex-wrap: nowrap | wrap | wrap-reverse;
    /* flex-wrap allows the items to wrap onto the next line as needed  */
    flex-direction: row / row-reverse / column / column-reverse;
    /* This establishes the main-axis, thus defining the direction flex items are placed in the flex container */
    flex-flow: column wrap / row no-wrap/ row-reverse wrap-reverse;
    /* flex-flow is shorthand for the flex-direction and flex-wrap properties */
    gap: ;
    row-gap: ;
    column-gap: 10px / 20px;
    /* 'gap' applies spacing only between items not on the outer edges */

    border: solid 2px green;

    padding: 5px;
}

/* Item flex properties */
.item {


    flex-grow: [1, 2, 3..etc];
    /*'flex-grow' controls the space each item is given. 2 gets double the space of 1*/
    flex-shrink: [1, 2, 3..etc];
    /*'flex-shrink' defines the ability for a flex item to shrink if necessary  */
    flex-basis: 20% / 5rem / auto / 0;
    /* flex-basis */
    flex: none | 0 1 auto | 5 | [ <'flex-grow' > <'flex-shrink' >? || <'flex-basis' >];
    /* flex is the shorthand for flex-grow, flex-shrink and flex-basis combined */
    order: [1, 2, 3, 4, 5...etc];
    /*'order' controls the order in which they appear in the flex container*/
    align-self: auto | flex-start | flex-end | center | baseline | stretch;





    border: solid 2px rgb(183, 33, 173);
    border-radius: 20px 0 0 0;
    margin: 5px;
    padding: 5px;
    font-size: larger;
    max-height: fit-content;
    max-width: 100%;
    box-shadow: 2px rgba(0, 0, 0, 0.466);

}

img {

    max-width: 100%;
    max-height: 100%;

}

*/